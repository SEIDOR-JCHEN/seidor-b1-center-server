// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GlobalRole {
  ADMIN
  USER
}

enum OrgRole {
  ADMIN
  USER
}


model Organization {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  description String
  apps      OrganizationApps[]
  users  UserOrganizationRole[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())

}

model App {
  id        Int   @id @default(autoincrement())
  name      String
  description String
  image    String
  internal  Boolean   @default(false)
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())

  orgs  OrganizationApps[]
}

model OrganizationApps {
  orgId Int
  appId Int
  active Boolean @default(true)
  dbName String
  dbUser String
  dbPassword String
  slUrl String
  slSessionId String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())

  org Organization @relation(fields: [orgId], references: [id])
  app App @relation(fields: [appId], references: [id])

  users UserOrganizationApps[]
  
  @@id([orgId, appId])
}


model User {
  id        Int   @id @default(autoincrement())
  email     String    @unique
  name      String?   
  password  String
  hashedRt  String?
  role GlobalRole @default(USER)
  verified Boolean @default(false)
  organizations  UserOrganizationRole[]
  apps UserOrganizationApps[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())
}

model UserOrganizationRole {
  orgId Int
  userId Int
  role OrgRole @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())
  
  organization Organization @relation(fields: [orgId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([orgId,userId])
}

model UserOrganizationApps{
  orgId Int
  userId Int
  appId Int
  active Boolean @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())

  user User @relation(fields: [userId], references: [id])
  orgApps OrganizationApps @relation(fields: [appId, orgId], references: [appId, orgId])

  @@id([orgId, userId, appId])
}

model Invitation {
  id        Int   @id @default(autoincrement())
  orgId     Int
  email     String
  token     String
  message   String?
  apps      String[]
  accepted  Boolean @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())
}




